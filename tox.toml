## tox.toml -*- mode: toml-mode -*-
# https://tox.wiki/en/4.28.4/user_guide.html
# https://github.com/tox-dev/tox-uv
# String substitution: "{[<table>]<key>}"
requires                   = ["tox>=4", "tox-uv>=1"]
env_list                   = ["docs"]
work_dir                   = ".temp/tox/work"
temp_dir                   = ".temp/tox/temp"
skip_missing_interpreters  = false

[vals]
package              = "jgdv"

[gh-actions]
python                     = []

[env_run_base]
description          = "base_env"
runner               = "uv-venv-lock-runner"
allowlist_externals  = ["echo"]

[env.lint]
description   = "run linters"
skip_install  = true
commands      = [
    ["uv", "run", "ruff", "check",
    "--output-format", "concise",
    {replace="posargs", default=[], extend=true},
    ],
]

[env.type]
description   = "type check files"
skip_install  = true
commands      = [
    ["uv", "run", "mypy", {replace="posargs", default=[], extend=true}, "{[vals]package}"],
]

[env.type-strict]
description = "mypy, but strict"
skip_install = true
commands  = [
    ["uv", "run", "mypy", "--strict",
    {replace="posargs", default=[], extend=true},
    "{[vals]package}"],
]

[env.test]
description   = "run tests"
skip_install  = false
commands      = [
    ["uv", "run", "pytest", { replace="posargs", default=["./jgdv"], extend=true }],
]

[env.test-cov]
description = "Generate test coverage report"
base      = ["env.test"]
commands  = [
    ["uv", "run", "pytest",
     "--cov=./jgdv",
     "--cov-report=json",
     "--cov-report=term",
     "--cov-report=xml",
     "--cov-report=html",
     "--no-cov-on-fail",
     { replace="posargs", default=["./jgdv"], extend=true }
     ],
]

[env.docs]
description   = "build documentation"
skip_install  = true
commands      = [
    ["uv", "run", "sphinx-build",
    "-q",
    "--conf-dir", "./jgdv/_docs/",
    "--warning-file", "./.temp/logs/sphinx.log",
    "--builder", "html",
    "./jgdv",
    "./.temp/docs",
    {replace="posargs", default=[], extend=true}
    ]
]

[env.release_notes]
description  = "generate changelog"
commands     = []
